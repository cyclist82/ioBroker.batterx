{
  "version": 3,
  "sources": ["../../src/lib/batterx.service.ts"],
  "sourcesContent": ["import { get } from 'axios';\n\ntype ConfigType = 'command';\n\ninterface StateConfig {\n\tid: string;\n\tname: string;\n\ttype: number;\n\tentity: number;\n\tunit: string;\n\tconfigType?: ConfigType;\n}\n\nexport interface BatterXState {\n\t273: EntityOne;\n\t274: EntityOne;\n\t275: EntityOne;\n\t305: EntityOne;\n\t306: EntityOne;\n\t307: EntityOne;\n\t337: EntityOne;\n\t338: EntityOne;\n\t339: EntityOne;\n\t353: EntityOne;\n\t354: EntityOne;\n\t369: EntityOne;\n\t370: EntityOne;\n\t371: EntityOne;\n\t377: EntityOne;\n\t1042: EntityOne;\n\t1058: EntityOne;\n\t1074: EntityOne;\n\t1121: EntityOne;\n\t1297: EntityOne;\n\t1298: EntityOne;\n\t1299: EntityOne;\n\t1329: EntityOne;\n\t1330: EntityOne;\n\t1331: EntityOne;\n\t1361: EntityOne;\n\t1362: EntityOne;\n\t1363: EntityOne;\n\t1377: EntityOne;\n\t1378: EntityOne;\n\t1553: EntityOne;\n\t1554: EntityOne;\n\t1569: EntityOne;\n\t1570: EntityOne;\n\t1617: EntityOne;\n\t1618: EntityOne;\n\t1634: EntityZero;\n\t2321: { [key: string]: number };\n\t2337: { [key: string]: number };\n\t2465: { [key: string]: number };\n\t2833: EntityZero;\n\t2834: EntityZero;\n\t2835: EntityZero;\n\t2865: EntityZero;\n\t2866: EntityZero;\n\t2867: EntityZero;\n\t2897: { [key: string]: number };\n\t2898: { [key: string]: number };\n\t2899: { [key: string]: number };\n\t2913: { [key: string]: number };\n\t2914: EntityZero;\n\t3090: EntityOne;\n\t3106: EntityOne;\n\t3122: EntityOne;\n\t3169: EntityOne;\n\t3313: EntityOne;\n\t3314: EntityOne;\n\t24582: { [key: string]: number };\n\tlogtime: Date;\n}\n\nexport interface EntityZero {\n\t0: number;\n}\n\nexport interface EntityOne {\n\t1: number;\n}\n\nexport interface StateMapItem {\n\tname: string;\n\tcollection: Collection;\n\tunit?: string;\n}\n\nconst collections = ['upsInput'] as const;\ntype Collection = (typeof collections)[number];\n\nconst INVERTER_COMMANDS_TYPE = 20738;\nconst INVERTER_COMMANDS_ENTITY = 0;\n\nexport interface CommandConfig {\n\tname: string;\n\ttext1: number;\n}\n\nexport type CommandType = 'gridInjection' | 'batteryCharging' | 'batteryChargingAC' | 'batteryDischarging';\n\nexport const commandOptions: Record<CommandType, CommandConfig> = {\n\tgridInjection: {\n\t\tname: 'Grid Injection',\n\t\ttext1: 1,\n\t},\n\tbatteryCharging: {\n\t\tname: 'Battery Charging',\n\t\ttext1: 2,\n\t},\n\tbatteryChargingAC: {\n\t\tname: 'Battery Charging AC',\n\t\ttext1: 3,\n\t},\n\tbatteryDischarging: {\n\t\tname: 'Battery Discharging',\n\t\ttext1: 4,\n\t},\n};\n\nexport type Command = '0' | '1' | '2';\nexport type CommandState = '0' | '1' | '10' | '11';\n\nexport const COMMANDS: Record<Command, string> = {\n\t'0': 'Off',\n\t'1': 'On',\n\t'2': 'Auto',\n};\n\nexport const COMMAND_STATES: Record<CommandState, string> = {\n\t'0': 'Off',\n\t'1': 'On',\n\t'10': 'Forced Off',\n\t'11': 'Forced On',\n};\n\nconst getLsConfigs = (\n\tbaseId: string,\n\tbaseName: string,\n\tstartType: number,\n\tunit: string,\n\tamount = 3,\n\tentity = 1,\n): StateConfig[] =>\n\t[...Array(amount)].map((_, index) => ({\n\t\tid: `${baseId}${index + 1}`,\n\t\tname: `${baseName}${index + 1}`,\n\t\ttype: startType + index,\n\t\tentity,\n\t\tunit,\n\t}));\n\nexport const getStatesMap = (): Record<string, StateConfig[]> => ({\n\tupsInput: [\n\t\t...getLsConfigs('voltageL', 'Voltage L', 273, 'V'),\n\t\t...getLsConfigs('currentL', 'Current L', 305, 'A'),\n\t\t...getLsConfigs('powerL', 'Power L', 337, 'W'),\n\t\t{\n\t\t\tid: 'powerTotal',\n\t\t\tname: 'Power Total',\n\t\t\ttype: 353,\n\t\t\tentity: 1,\n\t\t\tunit: 'W',\n\t\t},\n\t\t{\n\t\t\tid: 'frequency',\n\t\t\tname: 'Frequency',\n\t\t\ttype: 354,\n\t\t\tentity: 1,\n\t\t\tunit: 'Hz',\n\t\t},\n\t],\n\tupsOutput: [\n\t\t...getLsConfigs('voltageL', 'Voltage L', 1297, 'V'),\n\t\t...getLsConfigs('currentL', 'Current L', 1329, 'A'),\n\t\t...getLsConfigs('powerL', 'Power L', 1361, 'W'),\n\t\t{\n\t\t\tid: 'powerTotal',\n\t\t\tname: 'Power Total',\n\t\t\ttype: 1377,\n\t\t\tentity: 1,\n\t\t\tunit: 'W',\n\t\t},\n\t\t{\n\t\t\tid: 'frequency',\n\t\t\tname: 'Frequency',\n\t\t\ttype: 1378,\n\t\t\tentity: 1,\n\t\t\tunit: 'Hz',\n\t\t},\n\t],\n\tbattery: [\n\t\t{\n\t\t\tid: 'voltageMinusN',\n\t\t\tname: 'Voltage Minus N',\n\t\t\ttype: 1041,\n\t\t\tentity: 1,\n\t\t\tunit: 'V',\n\t\t},\n\t\t{\n\t\t\tid: 'voltagePlusN',\n\t\t\tname: 'Voltage Plus N',\n\t\t\ttype: 1042,\n\t\t\tentity: 1,\n\t\t\tunit: 'V',\n\t\t},\n\t\t{\n\t\t\tid: 'currentMinus',\n\t\t\tname: 'Current Minus',\n\t\t\ttype: 1057,\n\t\t\tentity: 1,\n\t\t\tunit: 'A',\n\t\t},\n\t\t{\n\t\t\tid: 'currentPlus',\n\t\t\tname: 'Current Plus',\n\t\t\ttype: 1058,\n\t\t\tentity: 1,\n\t\t\tunit: 'A',\n\t\t},\n\t\t{\n\t\t\tid: 'currencyMinus%',\n\t\t\tname: 'Currency Minus %',\n\t\t\ttype: 1073,\n\t\t\tentity: 1,\n\t\t\tunit: '%',\n\t\t},\n\t\t{\n\t\t\tid: 'currencyPlus%',\n\t\t\tname: 'Currency Plus %',\n\t\t\ttype: 1074,\n\t\t\tentity: 1,\n\t\t\tunit: '%',\n\t\t},\n\t],\n\tsolar: [\n\t\t...getLsConfigs('voltageX', 'Voltage X', 1553, 'V', 2, 1),\n\t\t...getLsConfigs('currentX', 'Current X', 1569, 'A', 2, 1),\n\t\t...getLsConfigs('powerX', 'Power X', 1617, 'W', 2, 1),\n\t],\n\tgrid: [\n\t\t...getLsConfigs('voltageL', 'Voltage L', 2833, 'V', 3, 0),\n\t\t...getLsConfigs('currentL', 'Current L', 2865, 'A', 3, 0),\n\t\t...getLsConfigs('powerFactorL', 'Power Factor L', 2881, '', 3, 0),\n\t\t...getLsConfigs('powerL', 'Power L', 2897, 'W', 3, 0),\n\t\t{\n\t\t\tid: 'powerPotal',\n\t\t\tname: 'Power Total',\n\t\t\ttype: 2913,\n\t\t\tentity: 0,\n\t\t\tunit: 'W',\n\t\t},\n\t\t{\n\t\t\tid: 'frequency',\n\t\t\tname: 'Frequency',\n\t\t\ttype: 2914,\n\t\t\tentity: 0,\n\t\t\tunit: 'Hz',\n\t\t},\n\t\t{\n\t\t\tid: 'powerFactorTotal',\n\t\t\tname: 'Power Factor Total',\n\t\t\ttype: 2915,\n\t\t\tentity: 0,\n\t\t\tunit: '',\n\t\t},\n\t],\n\thouse: [\n\t\t...getLsConfigs('powerL', 'Power L', 2897, 'W', 3, 2),\n\t\t{\n\t\t\tid: 'powerTotal',\n\t\t\tname: 'Power Total',\n\t\t\ttype: 2913,\n\t\t\tentity: 2,\n\t\t\tunit: 'W',\n\t\t},\n\t],\n\tcommands: [\n\t\t...Object.entries(commandOptions).map(([id, { name, text1 }]) => ({\n\t\t\tid: `${id}State`,\n\t\t\tname: `${name} State`,\n\t\t\ttype: 2465,\n\t\t\tentity: text1,\n\t\t\tunit: '',\n\t\t\tconfigType: 'command' as ConfigType,\n\t\t})),\n\t],\n});\n\nexport class BatterXService {\n\tprivate url!: string;\n\tconstructor(host: string) {\n\t\tthis.url = `http://${host}/api.php`;\n\t}\n\n\tasync getCurrent(): Promise<BatterXState> {\n\t\tconst { data } = await get(this.url, { params: { get: 'currentstate' } });\n\t\treturn data;\n\t}\n\n\tasync sendCommand(type: CommandType, command: Command): Promise<void> {\n\t\tconst text1 = Object.keys(commandOptions).indexOf(type) + 1;\n\t\tawait get(this.url, {\n\t\t\tparams: {\n\t\t\t\tset: 'command',\n\t\t\t\ttype: INVERTER_COMMANDS_TYPE,\n\t\t\t\tentity: INVERTER_COMMANDS_ENTITY,\n\t\t\t\ttext1,\n\t\t\t\ttext2: command,\n\t\t\t},\n\t\t});\n\t}\n\n\tgetCurrentSettingFromValue = (val: number): Command => {\n\t\tswitch (val) {\n\t\t\tcase 10:\n\t\t\t\treturn '0';\n\t\t\tcase 11:\n\t\t\t\treturn '1';\n\t\t\tdefault:\n\t\t\t\treturn '2';\n\t\t}\n\t};\n}\n"],
  "mappings": "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",
  "names": []
}
